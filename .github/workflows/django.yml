name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout Action
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage  # Install coverage.py

    - name: Run migrations
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        SPOTIFY_CLIENT_ID: ${{secrets.SPOTIFY_CLIENT_ID}}
        SPOTIFY_CLIENT_SECRET: ${{secrets.SPOTIFY_CLIENT_SECRET}}
      run: python manage.py migrate

    - name: Run Tests with Coverage
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        SPOTIFY_CLIENT_ID: ${{secrets.SPOTIFY_CLIENT_ID}}
        SPOTIFY_CLIENT_SECRET: ${{secrets.SPOTIFY_CLIENT_SECRET}}
      run: |
        coverage run --source='.' manage.py test --keepdb
        coverage report --fail-under=95  # Replace with 80 for final tests

    - name: Analyzing code with pylint
      run: |
        pylint $(git ls-files '*.py')
